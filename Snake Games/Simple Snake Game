#include<iostream>
#include<conio.h>
#include<windows.h>
using namespace std;
bool gameOver;
const int width = 20, height = 20;
int x, y, fx, fy, score;
int tx[100], ty[100];
int nTail;
enum eDirection {STOP=0, LEFT, RIGHT, UP, DOWN};
eDirection dir;

void Setup() {
    gameOver = false;
    dir = STOP;
    x = width/2;
    y = height/2;
    fx = rand() % width;
    fy = rand() % height;
    score=0;
}
void Draw() {
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), {0,0});
    CONSOLE_CURSOR_INFO info;
	info.dwSize = 100;
	info.bVisible = false;
	SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &info);
    for (int i=0; i<width; i++) {
        cout<<"# ";
    }
    cout<<endl;

    for (int i=0; i<height; i++) {
        for (int j=0; j<width; j++) {
            if (j==0 || j==(width-1))
                cout<<"# ";
            else if (i==y && j==x)
                cout<<"O ";
            else if (i==fy && j==fx)
                cout<<"f ";
            else{
                bool print=false;
                for (int k=0; k<nTail; k++){
                    if (tx[k]==j && ty[k]==i){
                        cout<<"o ";
                        print=true;
                    }
                }
                if (!print)
                    cout<<"  ";
            }
        }
        cout<<endl;
    }

    for (int i=0; i<width; i++) {
        cout<<"# ";
    }
    cout<<endl;

    cout<<"Score: "<<score<<endl;
}
void Input() {
    if (_kbhit()){
        switch (_getch()){
            case 'w':
                dir=UP;
                break;
            case 'a':
                dir=LEFT;
                break;
            case 's':
                dir=DOWN;
                break;
            case 'd':
                dir=RIGHT;
                break;
            case 'x':
                gameOver=true;
                break;
        }
    }
}
void Logic() {
    int prevx=tx[0];
    int prevy=ty[0];
    int prev2x, prev2y;
    tx[0]=x;
    ty[0]=y;
    for(int i=1; i<nTail; i++){
        prev2x=tx[i];
        prev2y=ty[i];
        tx[i]=prevx;
        ty[i]=prevy;
        prevx=prev2x;
        prevy=prev2y;
    }

    switch (dir){
        case LEFT:
            x--;
            break;
        case RIGHT:
            x++;
            break;
        case UP:
            y--;
            break;
        case DOWN:
            y++;
            break;
    }
    if (x>width || x<0 || y>height || y<0)
        gameOver=true;

    for (int i=0; i<nTail; i++)
        if (tx[i]==x && ty[i]==y)
            gameOver=true;

    if (x==fx && y==fy) {
        score+=1;
        fx = rand() % width;
        fy = rand() % height;
        nTail++;
    }
}
int main() {
    Setup();
    while (!gameOver) {
        Draw();
        Input();
        Logic();
        Sleep(50);
    }
    return 0;
}
